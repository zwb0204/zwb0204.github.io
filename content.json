{"meta":{"title":"Bluetooth Space IDH","subtitle":"Bluetooth solution provider","description":"Bluetooth Evangelist","author":"Harry Zhang","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2020-06-26T04:56:32.000Z","updated":"2020-06-26T05:23:13.266Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-06-26T01:25:29.000Z","updated":"2020-06-26T05:22:47.712Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-06-26T01:25:53.000Z","updated":"2020-06-26T05:23:01.815Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"c++ 视频学习note","slug":"c++-视频学习note","date":"2020-09-24T13:14:55.397Z","updated":"2020-09-24T13:19:22.579Z","comments":true,"path":"2020/09/24/c++-视频学习note/","link":"","permalink":"http://yoursite.com/2020/09/24/c++-%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0note/","excerpt":"","text":"[TOC] 约定 类的首字母要大写 this 是指当前对象","categories":[],"tags":[]},{"title":"ADB 命令使用大全","slug":"adb_命令使用大全","date":"2020-07-27T08:26:21.212Z","updated":"2020-07-27T14:14:31.173Z","comments":true,"path":"2020/07/27/adb_命令使用大全/","link":"","permalink":"http://yoursite.com/2020/07/27/adb_%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E5%A4%A7%E5%85%A8/","excerpt":"[TOC] 前言前面获得了adb logcat指令的详细应用，现在我需要通过adb指令来做更多的事情，例如取得root权限，挂载驱序，调试驱动程序等等，这就需要我们对adb得指令需要有一个全面得掌握 我以下的笔记基本参考这篇博文: https://blog.csdn.net/ezconn/article/details/85708000","text":"[TOC] 前言前面获得了adb logcat指令的详细应用，现在我需要通过adb指令来做更多的事情，例如取得root权限，挂载驱序，调试驱动程序等等，这就需要我们对adb得指令需要有一个全面得掌握 我以下的笔记基本参考这篇博文: https://blog.csdn.net/ezconn/article/details/85708000 启动/关闭adb123adb start-serviceadb kill-serviceadb devices 获得root权限，进入shell命令12345678adb rootadb reboot #重启Android 设备adb shell #退出shell，直接输入exitadb intall apk_name adb unintall apk_nameadb get-state #获取当前运行状态，device:正常运行 adb push 电脑路径 sdcard #目前似乎只能推送文件到sdcard中adb pull sdcard 电脑路径","categories":[{"name":"technology","slug":"technology","permalink":"http://yoursite.com/categories/technology/"}],"tags":[{"name":"android","slug":"android","permalink":"http://yoursite.com/tags/android/"}]},{"title":"ADB logcat 详细使用说明","slug":"adb_logcat_user guide","date":"2020-07-27T07:16:51.593Z","updated":"2020-07-27T14:23:03.147Z","comments":true,"path":"2020/07/27/adb_logcat_user guide/","link":"","permalink":"http://yoursite.com/2020/07/27/adb_logcat_user%20guide/","excerpt":"[TOC] 前言ADB是Android最经常使用的工具，而输出log 日志是调试android程序必备技巧之一，如何很好的使用adb logcat，我结合实际使用情况详细记录下","text":"[TOC] 前言ADB是Android最经常使用的工具，而输出log 日志是调试android程序必备技巧之一，如何很好的使用adb logcat，我结合实际使用情况详细记录下 简单使用logcat 直接使用 1adb logcat adb 运行窗口直接输出，默认输出效果如下： 1adb logcat &gt; d:log.txt 输出log 日志到d盘下的log.txe文件中，adb 运行窗口不显示 1adb logcat -c 清除缓冲区的日志，例如你在插入PC前，系统已经运行，它的日志就会存放在缓冲区 高阶应用 1adb logcat -h 输出如下，帮助文档说明的非常详细： 常用的 应用如下： 1adb logcat -s tag:V &gt; d:log.txt 过滤选项是必须使用的，因为整个Android的log日志实在是太多，你必须打印你关注的程序模块 1adb logcat -v time -s tag:v &gt; d:log.txt 组合选项使用，要先用-v , 后用-s，否则-v time不生效。 1adb logcat -v threadtime -s tag:v &gt; d:log.txt 如果要加入线程tid的信息的话，就用threadtime. 总结基本上使用以上的logcat命令就够用了，如有更细致的需求，就看adb logcat -h 帮助文档","categories":[{"name":"technology","slug":"technology","permalink":"http://yoursite.com/categories/technology/"}],"tags":[{"name":"android","slug":"android","permalink":"http://yoursite.com/tags/android/"}]},{"title":"Linux & Android study(2):Uboot和Linux内核编译","slug":"linux&Android_study_note(2)-Uboot和Linux内核编译（2）","date":"2020-07-17T14:44:37.048Z","updated":"2020-07-18T02:12:15.680Z","comments":true,"path":"2020/07/17/linux&Android_study_note(2)-Uboot和Linux内核编译（2）/","link":"","permalink":"http://yoursite.com/2020/07/17/linux&Android_study_note(2)-Uboot%E5%92%8CLinux%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91%EF%BC%882%EF%BC%89/","excerpt":"[TOC] 前言熟悉完了Linux的基本操作后，接下来就是配置编译器，编译uboot和Linux内核，编译linux驱动程式","text":"[TOC] 前言熟悉完了Linux的基本操作后，接下来就是配置编译器，编译uboot和Linux内核，编译linux驱动程式 配置NFS 安装NFS服务期 1234sudo apt-get install nfs-kernel-serversudo apt-get install nfs-commonsudo apt-get install rpcbindsudo vim /etc/exports 在/etc/exports中增加以下行 1/home/harry/work/nfs_root *(rw,sync,no_root_squash) 保存退出后，执行： 1234sudo exportfs -rexportfs: /etc/exports [1]: Neither 'subtree_check' or 'no_subtree_check' specified for export \"*:/home/harry/work/nfs_root\". Assuming default behaviour ('no_subtree_check'). NOTE: this default has changed since nfs-utils version 1.0.x 重新启动nfs 1nfs-kernel-server restart 测试NFS : 12sudo mount -t nfs local_ip:/home/harry/work/nfs_root /mntls /mnt/ 果/mnt下有共享文件/home/harry/work/nfs_root的文件内容，则挂载成功 卸载 1sudo umount -t nfs local_ip:/home/harry/work/nfs_root /mnt","categories":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/categories/linux/"}],"tags":[{"name":"technology","slug":"technology","permalink":"http://yoursite.com/tags/technology/"}]},{"title":"Life of IT GUY","slug":"程序员的生活","date":"2020-07-14T00:24:51.897Z","updated":"2020-07-20T15:09:55.235Z","comments":true,"path":"2020/07/14/程序员的生活/","link":"","permalink":"http://yoursite.com/2020/07/14/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E7%94%9F%E6%B4%BB/","excerpt":"[TOC] Introduce myselfHi, my name is Harry Zhang. I come from a small county of hunan hengyang , People in my hometown like eating rice noodles very much, example: marinated rice noddles, fish soup type , agaric and meat type. they are delicious but spicy. I have left my homtown about 18 years ,and I have been a embedded software engineer for 14 years .What is embedded software engineer?IT doesn’t matter if you don’t understand, you can call me “IT guy”. I am going to talk about life of IT GUY. When people heard the word “IT guy”, they may have these impression .","text":"[TOC] Introduce myselfHi, my name is Harry Zhang. I come from a small county of hunan hengyang , People in my hometown like eating rice noodles very much, example: marinated rice noddles, fish soup type , agaric and meat type. they are delicious but spicy. I have left my homtown about 18 years ,and I have been a embedded software engineer for 14 years .What is embedded software engineer?IT doesn’t matter if you don’t understand, you can call me “IT guy”. I am going to talk about life of IT GUY. When people heard the word “IT guy”, they may have these impression . IT guys are slovenly.they always carry a backpack . wear checked shirt and jeans , have a few har ,even bald ,look tired. Indeed ,this is the state of some IT guys, but not all. why? this wearing type is simple and comfortable .many IT guys are dressed like this , so it infects more and more IT guys . IT GUYS usually work a lot of overtime and stay up late ,leaving office after nine o’clock is norm, so they do not get enough sleep . you can see many these people in hua wei , oppo , vivo IT guys are indoorsman IT GUYS lack sense of humor, have a few friends, like to think independently .In spare time, IT guys want to have more rest at home , such as play games, read comics, watch movies and so on. Also some of IT guys at home learn new knowledge, do some open source project on github .they usually don’t say no when someone invites us out. Actually , IT guys also want to be more open . IT guy are the people who fix computer .I must say the definition of IT guys. it guys use computers to achieve a purpose or solve a problem. They write program code through some programming language, so computer just is the tool it guys use every day .it guys are programmer, It’s not fixing computers. of cource , Because computers is IT GUY ‘S close friend, so we can basically deal with some small problems of computers, such as installation of the system, drive installation, replace computer accessories .if we met big issue, we also ask the professional for help . IT guys are not good at communicating with peopleIT guy’ thinking is usually systematic and logical.people ‘s relationships are not only true or false, the objective factors also are one of the major component. Actually it is not that IT guys are bad at making changes, but that they don’t care to make the change. Fewer people ‘s raltionship can help IT GUYS focus more on technology . of course ,if IT GUYS want to change ,they would be successful , IT guys also have positive side IT guys also can be cool and homorous. Popular talk show Actor 庞博， he is TI guye. famous car critic 陈震，i like to watch his video . he used to be a TI GUYS. The programmer’s learning ability is strong, if he can expand his ability . the potential is infinite IT GUYS are well paid . average pay is higher than other industries. IT GUYS has many small skills, for example ,me , i can build my person blog by myself , share my technology to other people . write article used markdown language. it type article quickly . i like use the mind mapping to note my knowledge . it stucture your knowledge. I recommend mindmanger . This is IT guy ,i am proud .","categories":[{"name":"english","slug":"english","permalink":"http://yoursite.com/categories/english/"}],"tags":[{"name":"english","slug":"english","permalink":"http://yoursite.com/tags/english/"}]},{"title":"Linux study note (1)","slug":"linux&Android_study_note(1)-Linux常用指令","date":"2020-07-12T13:12:09.085Z","updated":"2020-07-17T15:31:20.386Z","comments":true,"path":"2020/07/12/linux&Android_study_note(1)-Linux常用指令/","link":"","permalink":"http://yoursite.com/2020/07/12/linux&Android_study_note(1)-Linux%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/","excerpt":"[TOC] 前言最近开始要开搞bluedroid 蓝牙协议栈，所以拿出以前买回的JZ2440 开发板，开始重新学习Linux &amp; androdi driver开发，在这里记录每次学习的点滴","text":"[TOC] 前言最近开始要开搞bluedroid 蓝牙协议栈，所以拿出以前买回的JZ2440 开发板，开始重新学习Linux &amp; androdi driver开发，在这里记录每次学习的点滴 环境搭建需要安装如下软件： Ubuntu 20.4 iso 镜像文件 Vmware Workstation pro , 收费，但是注册码一搜大把 SecureCRT 8.5 , 需破解 CuteFTP 9.0.5.0007, 最新版本9.3.0.3 找不到破解文件 注： MobaXterm 软件可以同时替代SecureCRT和CuteFTP, 免费版据说可以满足需求，暂未使用 Linux常用指令 rm sudo rm -rf file_name 注解： r: 递归删除 ； f: force 执行 mkdir sudo mkdir filename 创建新的文件夹 pwd/cd/ls tar xjf file_name: 解压缩 ；tar cjf filename 压缩文件 cat file_name： 查看文件 patch -p1 &lt;../路径： p1: 打开patch文件，1的意思是就是将路径的第一段忽略，例如,如果当前已经在路径u-boot-1.1.6 的时候，就不需要u-boot-1.1.6/这一段路径，就使用-P1： — u-boot-1.1.6/Makefile 2006-11-02 22:15:01.000000000 +0800 复制/剪贴/更改名字 mv a.c b.c : 更改名字 mv a.c b.c : 移动文件 cp a/b/* a/c : 将b文件下的内容复制到a/c下面 cp a/b a/c ： 将b文件拷贝到a/c下面，b文件作为子文件 查找 find -name “关键词” vim常用操作 块操作 ctrl+v, 左右上下移动即可任意位置， 选择之后按y,在指定光标出按p， 如果是删除则是按x 转到某一行使用命令： :行号 ，例如：转到100行。 ：100","categories":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/categories/linux/"}],"tags":[{"name":"technology","slug":"technology","permalink":"http://yoursite.com/tags/technology/"}]},{"title":"QCC MDE 开发初窥(二)","slug":"QCC MDE 开发初窥(二)","date":"2020-07-04T14:28:22.877Z","updated":"2020-07-05T10:18:14.203Z","comments":true,"path":"2020/07/04/QCC MDE 开发初窥(二)/","link":"","permalink":"http://yoursite.com/2020/07/04/QCC%20MDE%20%E5%BC%80%E5%8F%91%E5%88%9D%E7%AA%A5(%E4%BA%8C)/","excerpt":"[TOC] 前言搭建好开发环境，输出log 信息之后，在阅读代码过程中发现，新的软件架构在task ,message方面，新增了一些应用，例如message_boker, Task list之类的。本文就针对新增的message , task list的原理做一个阐述","text":"[TOC] 前言搭建好开发环境，输出log 信息之后，在阅读代码过程中发现，新的软件架构在task ,message方面，新增了一些应用，例如message_boker, Task list之类的。本文就针对新增的message , task list的原理做一个阐述 MESSAGE_BASE &amp; MESSAGE_GROUP在代码中出现了诸如LOGIC_INPUT_MESSAGE_BASE , UI_TELEPHONY_MESSAGE_GROUP 之类的，搜寻代码，无法找到它们这些消息ID的定义，其实这些定义都在domain_message.h 中已经定义，详情如下： 首先了解xx_MESSAGE_GROUP 和xx_MESSAGE_BASE 之间的关系 1xx_MESSAGE_GROUP = xx_MESSAGE_BASE &lt;&lt; 8 所有的MESSAGE_GROUP的定义 12345678enum message_groups&#123; FOREACH_DOMAINS_MESSAGE_GROUP(EXPAND_AS_MESSAGE_GROUP_ENUM) FOREACH_SERVICES_MESSAGE_GROUP(EXPAND_AS_MESSAGE_GROUP_ENUM) FOREACH_TOPOLOGY_MESSAGE_GROUP(EXPAND_AS_MESSAGE_GROUP_ENUM) FOREACH_APPS_MESSAGE_GROUP(EXPAND_AS_MESSAGE_GROUP_ENUM) FOREACH_UI_INPUTS_MESSAGE_GROUP(EXPAND_AS_MESSAGE_GROUP_ENUM)&#125;; 它等价于如下代码,具体的细节查看domain_message.h ： 1234567891011121314151617181920212223enum message_groups&#123; INTERNAL_MESSAGE_GROUP, AV_MESSAGE_GROUP, /* See #av_status_messages */ \\ ................................................................ LEAKTHROUGH_MESSAGE_GROUP, /* See leakthrough_msg_t */\\ QCOM_CON_MANAGER_MESSAGE_GROUP, HANDSET_SERVICE_MESSAGE_GROUP, ............................ AUDIO_CURATION_SERVICE_MESSAGE_GROUP, TWS_TOPOLOGY_SERVICE_MESSAGE_GROUP, /* See #tws_topology_message_t */ \\ TWS_TOPOLOGY_CLIENT_NOTIFIER_SERVICE_MESSAGE_GROUP, HEADSET_TOPOLOGY_SERVICE_MESSAGE_GROUP, SYSTEM_SERVICE_MESSAGE_GROUP, CONN_RULES_SERVICE_MESSAGE_GROUP, EARBUD_ROLE_SERVICE_MESSAGE_GROUP, UI_INPUTS_TELEPHONY_MESSAGE_GROUP, ................................. UI_INPUTS_BOUNDS_CHECK_MESSAGE_GROUP&#125; MESSAGE_GROUP 的值确定了，那么每个group的MESSAGE_BASE值也随之确认 12345678typedef enum&#123; FOREACH_DOMAINS_MESSAGE_GROUP(EXPAND_AS_MESSAGE_BASE_ENUM) FOREACH_SERVICES_MESSAGE_GROUP(EXPAND_AS_MESSAGE_BASE_ENUM) FOREACH_TOPOLOGY_MESSAGE_GROUP(EXPAND_AS_MESSAGE_BASE_ENUM) FOREACH_APPS_MESSAGE_GROUP(EXPAND_AS_MESSAGE_BASE_ENUM) FOREACH_UI_INPUTS_MESSAGE_GROUP(EXPAND_AS_MESSAGE_BASE_ENUM)&#125; message_base_t; 它等价以下代码： 1234567891011121314151617181920212223enum message_groups&#123; INTERNAL_MESSAGE_GROUP &lt;&lt; 8, AV_MESSAGE_GROUP &lt;&lt; 8, /* See #av_status_messages */ \\ ................................................................ LEAKTHROUGH_MESSAGE_GROUP &lt;&lt; 8, /* See leakthrough_msg_t */\\ QCOM_CON_MANAGER_MESSAGE_GROUP &lt;&lt; 8, HANDSET_SERVICE_MESSAGE_GROUP &lt;&lt; 8, ............................ AUDIO_CURATION_SERVICE_MESSAGE_GROUP &lt;&lt; 8, TWS_TOPOLOGY_SERVICE_MESSAGE_GROUP &lt;&lt; 8, /* See #tws_topology_message_t */ \\ TWS_TOPOLOGY_CLIENT_NOTIFIER_SERVICE_MESSAGE_GROUP &lt;&lt; 8, HEADSET_TOPOLOGY_SERVICE_MESSAGE_GROUP &lt;&lt; 8, SYSTEM_SERVICE_MESSAGE_GROUP &lt;&lt; 8, CONN_RULES_SERVICE_MESSAGE_GROUP &lt;&lt; 8, EARBUD_ROLE_SERVICE_MESSAGE_GROUP &lt;&lt; 8, UI_INPUTS_TELEPHONY_MESSAGE_GROUP &lt;&lt; 8, ................................. UI_INPUTS_BOUNDS_CHECK_MESSAGE_GROUP &lt;&lt; 8&#125; MESSAGE_BROKER有关message_broker官方只有如下说明： ​ The Message Broker allows client modules to register interest​ in System Messages by Message Group. The Message Broker registers​ with the message group owner on behalf of the client module. The​ message group owner subsequently messages the client module directly.​ The message group owner’s messge group ID and registration function​ is provides to message broker in MessageBroker_init(). 意思是：message broker允许将感兴趣的message_group注册到系统消息中。 应该代码中只应用到两个API: MessageBroker_Init() 代码中该代码中的涉及的参数message_broker_group_registrations_end[]和message_broker_group_registrations_begain[]具体定义都不可见。所以 MessageGroupRegister 和MessageGroupUnregister 两个函数的定义也未知。 void MessageBroker_RegisterInterestInMsgGroups(Task task, const message_group_t* msg_groups, unsigned num_groups) num_groups是指在*msg_groups为第一个message_group,在此基础上的几个message_group. 此函数最后要调用registration-&gt;MessageGroupRegister(task, group) ，但由于MessageGroupRegister的具体定义未知，所以也无从查询它究竟做了什么. 疑问? message_broker的具体怎么应用，目前尚未知道，在后续的代码中希望可以找到答案。 Tasklist applicationtask list 中应用到的结构体如下图所示： ![](QCC MDE 开发初窥(二)/task_list_struct.png) 创建task list 动态的task list : TaskList_Create() 静态的task list : TaskList_Initralise()， 它设置 目前代码中，两者创建的容量都是1，唯一区别就是no_destroy的赋值不一样，动态赋值：false, 静态赋值TRUE TaskList_AddTask(), 一般在register一个task的时候就需要该操作 使用过程中，就可以利用task list 来发送消息：Tasklist_MessageSendId() 动态创建tasklist后，unresgister 一个task的时候： TaskList_RemoveTask() 通过TaskList_Size()判断 task 是否为零，如果等于零，则TaskList_Destroy()","categories":[{"name":"QCC","slug":"QCC","permalink":"http://yoursite.com/categories/QCC/"}],"tags":[{"name":"technology","slug":"technology","permalink":"http://yoursite.com/tags/technology/"}]},{"title":"Markdwon 常用语法","slug":"Markdwon 常用语法","date":"2020-06-27T01:47:24.558Z","updated":"2020-07-05T10:13:53.013Z","comments":true,"path":"2020/06/27/Markdwon 常用语法/","link":"","permalink":"http://yoursite.com/2020/06/27/Markdwon%20%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/","excerpt":"[TOC] 我写作使用的工具是Typora，免费，且方便快捷的集合了一些语法，以下的操作都是基于Typora 工具的，写一篇文章足够。","text":"[TOC] 我写作使用的工具是Typora，免费，且方便快捷的集合了一些语法，以下的操作都是基于Typora 工具的，写一篇文章足够。 分级标题，一共六级 1234# 一级标题## 二级标题....###### 六级标题 列表 1- 文本 代码段 1​&#96;&#96;&#96;c &#x2F;&#x2F; 输入此内容，自动变为代码块 引用 1&gt; 文本 插入链接 1[文本]（www.example.com） 待办事项 1- [x] 文本 &#x2F;&#x2F; 括号内需空格或者x 字体 12345&#x3D;&#x3D;文本&#x3D;&#x3D; &#x2F;&#x2F; 高亮*文本* &#x2F;&#x2F; 斜体**文本** &#x2F;&#x2F; 加粗***文本*** &#x2F;&#x2F; 斜体加粗&#96;文本&#96; &#x2F;&#x2F; 加背景 插入图片 在_post文件下同时新建一个与文档名字一样的文件夹，将图片放入其中，在文档中用以下方式插入图片 待续。。。","categories":[{"name":"tool","slug":"tool","permalink":"http://yoursite.com/categories/tool/"}],"tags":[{"name":"life","slug":"life","permalink":"http://yoursite.com/tags/life/"}]},{"title":"Hexo user guide","slug":"Hexo user guide","date":"2020-06-26T15:12:14.000Z","updated":"2020-06-26T16:19:34.099Z","comments":true,"path":"2020/06/26/Hexo user guide/","link":"","permalink":"http://yoursite.com/2020/06/26/Hexo%20user%20guide/","excerpt":"[TOC] Build Private Blog搭建过程参考文章：https://zhuanlan.zhihu.com/p/32957389 个人域名在阿里云申请的","text":"[TOC] Build Private Blog搭建过程参考文章：https://zhuanlan.zhihu.com/p/32957389 个人域名在阿里云申请的 USER Guide 更新个人信息，在根目录的_config.yml 中更新博客名字，作者，git 仓库地址等等。 将写好的文章直接放在目录：source/_posts下面 使用命令： hexo g // 如果有变动，执行命令生成 hexo s // 本地预览命令 hexo server -p 5000 // 如果4000端口被占用，则使用此命令更换端口 hexo d // commit 本地改动到github 修改完主题完配置后，最好先执行 hexo clean 网页优化 首页不要显示全文 在文档中截取需要预览的部分, 文章之后输入： 1&lt;!-- more --&gt; 例如代码块复制，增加分页等优化功能，7.8.0版本都已经集合，只需在主题配置中将该部分的功能设定改为enable：true 更换电脑如果更换电脑后，怎么重新配置呢？待续… 网站浏览个人博客地址：蓝牙空间","categories":[{"name":"tool","slug":"tool","permalink":"http://yoursite.com/categories/tool/"}],"tags":[{"name":"life","slug":"life","permalink":"http://yoursite.com/tags/life/"}]},{"title":"QCC MDE 开发初窥（一）","slug":"QCC MDE 开发初窥(一)","date":"2020-06-24T02:21:10.236Z","updated":"2020-06-26T05:16:15.555Z","comments":true,"path":"2020/06/24/QCC MDE 开发初窥(一)/","link":"","permalink":"http://yoursite.com/2020/06/24/QCC%20MDE%20%E5%BC%80%E5%8F%91%E5%88%9D%E7%AA%A5(%E4%B8%80)/","excerpt":"QCC MDE 开发初窥(一)[TOC] 前言QCC收购CSR之后，将SDK的架构进行了大改，从ADK6.x 版本开始，使用的IDE是MDE+Toolkit ,对于基于CSR 时代的软件开发者来说，需要重新学习，我后续将QCC平台的开发心得一一阐述，节约开发者的学习成本。","text":"QCC MDE 开发初窥(一)[TOC] 前言QCC收购CSR之后，将SDK的架构进行了大改，从ADK6.x 版本开始，使用的IDE是MDE+Toolkit ,对于基于CSR 时代的软件开发者来说，需要重新学习，我后续将QCC平台的开发心得一一阐述，节约开发者的学习成本。 开发环境安装安装包包含以下三部分,按照安装步骤安装即可： 开发包目前有两种：基于QCC512x_QCC302x芯片平台的使用ADK_QCC512x_QCC302x_WIN_6.4.2.26; 基于QCC514x_QCC304x芯片平台的使用ADK_Tookkit_1.0.1.19 + qcc514x-qcc304x-src-1-0_qtil_standard_oem_earbud.git. 开发IDE都使用MDE_WIN_2.4.1.4 Bluesuit3.3.2 注意 ：安装成功后，python的安装程序已经包含在ADK_QCC512X_QCC302X_WIN_6.4.2.26\\tools\\python27中，如果是Toolkit ,则包含在： ADK_Toolkit_1.0.1.19_x64\\tools\\python27\\，无需下载python安装包进行安装。 开发环境配置和TRBI200连线 安装完毕之后，需要在python中配置默认字体encoding为gbk, 以ADK_Toolkit_1.0.1.19为例，修改步骤如下： 在..\\ADK_Toolkit_1.0.1.19_x64\\tools\\python27\\Lib\\site-packages\\中新建文件：sitecustomize.py, 输入代码： 1234inport sys reload(sys)sys.setdefaultencoding(‘gbk’) 解决问题：如果不修改程gbk， 在log输出的时候会遇到无法解析的问题。 在工程配置文件中，需要remove 5个宏定义： ![image-20200623214923992](C:\\Users\\Harry zhang\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200623214923992.png) 解决问题：如果电路中没有温度检测电路的话，运行默认程序会造成通信dead, 程序无法正常运行。 TRBI200 接口连接注意事项 TRBI200的16PIN接口分布如下图右下角所示，TRBI200中只需接四个接口中的一个接口即可，另外加TX_CLK, VCC(1.8V or 3.3V), GND 一共5pin ，速度可以达到10MHz, 判断传输通道是否OK，可以观察以下几个LEDS是否常亮: STATUS, TRB SE, TRB SE VCC。 ![image-20200623220346476](C:\\Users\\Harry zhang\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200623220346476.png) 编译，烧录，输出调试信息 编译，烧录，输出调试信息全部可以通过MDE完成，步骤见下图所示，烧录的的时候注意，一定要将SYS_CTRL脚拉高hold住。 ![image-20200623222238549](C:\\Users\\Harry zhang\\AppData\\Roaming\\Typora\\typora-user-images\\image-20200623222238549.png) 更改log leve ,默认的log level 是2， 即DEBUG_LOG_LEVEL_INFO。 使用的调试输出代码格式： 1DEBUG_LOG_INFO(\"handleMessageAppInitStart\"); 如要改成其他的log level , 则在项目属性中定义宏：SET_LOG_LEVEL=x , x对应以下枚举值： 12345678typedef enum &#123; DEBUG_LOG_LEVEL_ERROR, DEBUG_LOG_LEVEL_WARN, DEBUG_LOG_LEVEL_INFO, DEBUG_LOG_LEVEL_DEBUG, DEBUG_LOG_LEVEL_VERBOSE, DEBUG_LOG_LEVEL_V_VERBOSE,&#125; debug_log_level_t; 对应的调试代码为： 123456DEBUG_LOG_ERROR(...) DEBUG_LOG_WARN(...) DEBUG_LOG_INFO(...) DEBUG_LOG_DEBUG(...) DEBUG_LOG_VERBOSE(...) DEBUG_LOG_V_VERBOSE(...) 至此，你已经可以拿到板子正常运行程序，并且进行代码调试了。","categories":[{"name":"QCC","slug":"QCC","permalink":"http://yoursite.com/categories/QCC/"}],"tags":[{"name":"technology","slug":"technology","permalink":"http://yoursite.com/tags/technology/"}]}],"categories":[{"name":"technology","slug":"technology","permalink":"http://yoursite.com/categories/technology/"},{"name":"linux","slug":"linux","permalink":"http://yoursite.com/categories/linux/"},{"name":"english","slug":"english","permalink":"http://yoursite.com/categories/english/"},{"name":"QCC","slug":"QCC","permalink":"http://yoursite.com/categories/QCC/"},{"name":"tool","slug":"tool","permalink":"http://yoursite.com/categories/tool/"}],"tags":[{"name":"android","slug":"android","permalink":"http://yoursite.com/tags/android/"},{"name":"technology","slug":"technology","permalink":"http://yoursite.com/tags/technology/"},{"name":"english","slug":"english","permalink":"http://yoursite.com/tags/english/"},{"name":"life","slug":"life","permalink":"http://yoursite.com/tags/life/"}]}